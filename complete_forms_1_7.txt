                  {/* 1. Identification Section */}
                  <div className="border rounded-md p-4 mb-6">
                    <h4 className="font-medium mb-4">1. Identification</h4>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.userId"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>User ID</FormLabel>
                            <FormDescription>Employee ID, service account name</FormDescription>
                            <FormControl>
                              <Input placeholder="Enter user ID" {...field} />
                            </FormControl>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.fullNameRole"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Full Name / Role</FormLabel>
                            <FormControl>
                              <Input placeholder="Enter full name and role" {...field} />
                            </FormControl>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.contactInfo"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Contact Info</FormLabel>
                            <FormDescription>Email, phone for emergency access</FormDescription>
                            <FormControl>
                              <Input placeholder="Enter contact information" {...field} />
                            </FormControl>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.identityType"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Identity Type</FormLabel>
                            <Select 
                              onValueChange={field.onChange}
                              defaultValue={field.value}
                            >
                              <FormControl>
                                <SelectTrigger>
                                  <SelectValue placeholder="Select identity type" />
                                </SelectTrigger>
                              </FormControl>
                              <SelectContent>
                                <SelectItem value="employee">Employee</SelectItem>
                                <SelectItem value="contractor">Contractor</SelectItem>
                                <SelectItem value="vendor">Vendor</SelectItem>
                                <SelectItem value="service-account">Service Account</SelectItem>
                                <SelectItem value="system-account">System Account</SelectItem>
                                <SelectItem value="other">Other</SelectItem>
                              </SelectContent>
                            </Select>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.identificationMethod"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Identification Method</FormLabel>
                            <Select 
                              onValueChange={field.onChange}
                              defaultValue={field.value}
                            >
                              <FormControl>
                                <SelectTrigger>
                                  <SelectValue placeholder="Select identification method" />
                                </SelectTrigger>
                              </FormControl>
                              <SelectContent>
                                <SelectGroup>
                                  <SelectLabel>Standard Authentication</SelectLabel>
                                  <SelectItem value="username-password">Username/Password</SelectItem>
                                  <SelectItem value="employee-id">Employee ID</SelectItem>
                                  <SelectItem value="certificate">Certificate</SelectItem>
                                  <SelectItem value="smart-card">Smart Card</SelectItem>
                                  <SelectItem value="sso">Single Sign-On</SelectItem>
                                  <SelectItem value="token">Token-based</SelectItem>
                                </SelectGroup>
                                
                                <SelectGroup>
                                  <SelectLabel>Advanced Authentication</SelectLabel>
                                  <SelectItem value="mfa">MFA (Multi-Factor Authentication)</SelectItem>
                                  <SelectItem value="uwa">UWA (Universal Wallet Address)</SelectItem>
                                </SelectGroup>
                                
                                <SelectGroup>
                                  <SelectLabel>Biometric</SelectLabel>
                                  <SelectItem value="biometric-fingerprint">Biometric - Fingerprint</SelectItem>
                                  <SelectItem value="biometric-voice">Biometric - Voice</SelectItem>
                                  <SelectItem value="biometric-facial">Biometric - Facial</SelectItem>
                                  <SelectItem value="biometric-iris">Biometric - Iris</SelectItem>
                                </SelectGroup>
                                
                                <SelectGroup>
                                  <SelectLabel>Government IDs</SelectLabel>
                                  <SelectItem value="drivers-license">Driver's License</SelectItem>
                                  <SelectItem value="passport">Passport</SelectItem>
                                  <SelectItem value="national-id">National ID</SelectItem>
                                  <SelectItem value="military-id">Military ID</SelectItem>
                                  <SelectItem value="state-id">State ID</SelectItem>
                                  <SelectItem value="birth-certificate">Birth Certificate</SelectItem>
                                  <SelectItem value="social-security">Social Security Card</SelectItem>
                                  <SelectItem value="citizenship-certificate">Certificate of Citizenship</SelectItem>
                                </SelectGroup>
                                
                                <SelectItem value="other">Other</SelectItem>
                              </SelectContent>
                            </Select>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                    </div>
                  </div>
                  {/* 2. Authentication Practices Section */}
                  
                  <div className="border rounded-md p-4 mb-6">
                    <h4 className="font-medium mb-4">2. Authentication Practices</h4>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.mfaTypes"
                        render={() => (
                          <FormItem>
                            <div className="mb-4">
                              <FormLabel>MFA Types</FormLabel>
                              <FormDescription>
                                Select all MFA types that are implemented
                              </FormDescription>
                            </div>
                            <div className="grid grid-cols-2 md:grid-cols-3 gap-3">
                              {[
                                "Mobile App Authenticator",
                                "Hardware Tokens/Keys",
                                "Biometrics",
                                "Push Notifications",
                                "Phone Calls"
                              ].map((type) => (
                                <FormField
                                  key={type}
                                  control={form.control}
                                  name="identityBehaviorHygiene.mfaTypes"
                                  render={({ field }) => {
                                    return (
                                      <FormItem
                                        key={type}
                                        className="flex flex-row items-start space-x-3 space-y-0"
                                      >
                                        <FormControl>
                                          <Checkbox
                                            checked={field.value?.includes(type)}
                                            onCheckedChange={(checked) => {
                                              const updatedValue = checked
                                                ? [...(field.value || []), type]
                                                : field.value?.filter(
                                                    (value) => value !== type
                                                  ) || [];
                                              field.onChange(updatedValue);
                                            }}
                                          />
                                        </FormControl>
                                        <FormLabel className="font-normal cursor-pointer">
                                          {type}
                                        </FormLabel>
                                      </FormItem>
                                    );
                                  }}
                                />
                              ))}
                            </div>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.biometricAuthentication"
                        render={({ field }) => (
                          <FormItem className="flex flex-row items-start space-x-3 space-y-0 border p-4 rounded-md">
                            <FormControl>
                              <Checkbox
                                checked={field.value}
                                onCheckedChange={field.onChange}
                              />
                            </FormControl>
                            <div className="space-y-1 leading-none">
                              <FormLabel>Biometric Authentication</FormLabel>
                              <FormDescription>
                                Do you use biometric authentication?
                              </FormDescription>
                            </div>
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.biometricTypes"
                        render={() => (
                          <FormItem>
                            <div className="mb-4">
                              <FormLabel>Biometric Types</FormLabel>
                              <FormDescription>
                                Select all biometric types that are used
                              </FormDescription>
                            </div>
                            <div className="grid grid-cols-2 md:grid-cols-3 gap-3">
                              {[
                                "Fingerprint", 
                                "Facial Recognition",
                                "Voice Recognition",
                                "Iris Scanning",
                                "Palm Vein/Hand Geometry",
                                "Behavioral Biometrics"
                              ].map((type) => (
                                <FormField
                                  key={type}
                                  control={form.control}
                                  name="identityBehaviorHygiene.biometricTypes"
                                  render={({ field }) => {
                                    return (
                                      <FormItem
                                        key={type}
                                        className="flex flex-row items-start space-x-3 space-y-0"
                                      >
                                        <FormControl>
                                          <Checkbox
                                            checked={field.value?.includes(type)}
                                            onCheckedChange={(checked) => {
                                              const updatedValue = checked
                                                ? [...(field.value || []), type]
                                                : field.value?.filter(
                                                    (value) => value !== type
                                                  ) || [];
                                              field.onChange(updatedValue);
                                            }}
                                          />
                                        </FormControl>
                                        <FormLabel className="font-normal cursor-pointer">
                                          {type}
                                        </FormLabel>
                                      </FormItem>
                                    );
                                  }}
                                />
                              ))}
                            </div>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                    </div>
                  </div>
                  
                  {/* Access Behavior Section - REMOVED DUPLICATE NUMBER */}
                  <div className="border rounded-md p-4 mb-6">
                    <h4 className="font-medium mb-4">Access Behavior</h4>
                    <div className="space-y-6">
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.loginPatterns"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Login Patterns</FormLabel>
                            <Select 
                              onValueChange={field.onChange}
                              defaultValue={field.value}
                            >
                              <FormControl>
                                <SelectTrigger>
                                  <SelectValue placeholder="Select typical login patterns" />
                                </SelectTrigger>
                              </FormControl>
                              <SelectContent>
                                <SelectItem value="regular-business-hours">Regular Business Hours Only</SelectItem>
                                <SelectItem value="extended-hours">Extended Hours (Early/Late)</SelectItem>
                                <SelectItem value="24-7-operations">24/7 Operations</SelectItem>
                                <SelectItem value="mostly-remote">Primarily Remote Access</SelectItem>
                                <SelectItem value="irregular-varied">Irregular/Varied Patterns</SelectItem>
                              </SelectContent>
                            </Select>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.remoteAccessFrequency"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Remote Access Frequency</FormLabel>
                            <Select 
                              onValueChange={field.onChange}
                              defaultValue={field.value}
                            >
                              <FormControl>
                                <SelectTrigger>
                                  <SelectValue placeholder="Select remote access frequency" />
                                </SelectTrigger>
                              </FormControl>
                              <SelectContent>
                                <SelectItem value="rare">Rare (Almost Never)</SelectItem>
                                <SelectItem value="occasional">Occasional (Monthly)</SelectItem>
                                <SelectItem value="regular">Regular (Weekly)</SelectItem>
                                <SelectItem value="frequent">Frequent (Daily)</SelectItem>
                                <SelectItem value="primary-access">Primary Access Method</SelectItem>
                              </SelectContent>
                            </Select>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.sessionDuration"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Typical Session Duration</FormLabel>
                            <Select 
                              onValueChange={field.onChange}
                              defaultValue={field.value}
                            >
                              <FormControl>
                                <SelectTrigger>
                                  <SelectValue placeholder="Select typical session duration" />
                                </SelectTrigger>
                              </FormControl>
                              <SelectContent>
                                <SelectItem value="short">Short (&lt;1 hour)</SelectItem>
                                <SelectItem value="medium">Medium (1-4 hours)</SelectItem>
                                <SelectItem value="long">Long (4-8 hours)</SelectItem>
                                <SelectItem value="extended">Extended (&gt;8 hours)</SelectItem>
                                <SelectItem value="all-day">All Day Sessions</SelectItem>
                              </SelectContent>
                            </Select>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <FormField
                          control={form.control}
                          name="identityBehaviorHygiene.abnormalAccessDetection"
                          render={({ field }) => (
                            <FormItem className="flex flex-row items-start space-x-3 space-y-0 border p-4 rounded-md">
                              <FormControl>
                                <Checkbox
                                  checked={field.value}
                                  onCheckedChange={field.onChange}
                                />
                              </FormControl>
                              <div className="space-y-1 leading-none">
                                <FormLabel>Abnormal Access Detection</FormLabel>
                                <FormDescription>
                                  Do you have systems to detect abnormal access patterns?
                                </FormDescription>
                              </div>
                            </FormItem>
                          )}
                        />
                        
                        <FormField
                          control={form.control}
                          name="identityBehaviorHygiene.locationBasedAccess"
                          render={({ field }) => (
                            <FormItem className="flex flex-row items-start space-x-3 space-y-0 border p-4 rounded-md">
                              <FormControl>
                                <Checkbox
                                  checked={field.value}
                                  onCheckedChange={field.onChange}
                                />
                              </FormControl>
                              <div className="space-y-1 leading-none">
                                <FormLabel>Location-Based Access Controls</FormLabel>
                                <FormDescription>
                                  Do you restrict access based on geographic location?
                                </FormDescription>
                              </div>
                            </FormItem>
                          )}
                        />
                      </div>
                    </div>
                  </div>
                  
                  {/* 4. Identity Protection Section */}
                  <div className="border rounded-md p-4 mb-6">
                    <h4 className="font-medium mb-4">4. Identity Protection</h4>
                    <div className="space-y-6">
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <FormField
                          control={form.control}
                          name="identityBehaviorHygiene.identityProtectionTraining"
                          render={({ field }) => (
                            <FormItem className="flex flex-row items-start space-x-3 space-y-0 border p-4 rounded-md">
                              <FormControl>
                                <Checkbox
                                  checked={field.value}
                                  onCheckedChange={field.onChange}
                                />
                              </FormControl>
                              <div className="space-y-1 leading-none">
                                <FormLabel>Identity Protection Training</FormLabel>
                                <FormDescription>
                                  Do you provide identity protection training to users?
                                </FormDescription>
                              </div>
                            </FormItem>
                          )}
                        />
                        
                        <FormField
                          control={form.control}
                          name="identityBehaviorHygiene.trainingCompletionDate"
                          render={({ field }) => (
                            <FormItem>
                              <FormLabel>Last Training Completion Date</FormLabel>
                              <FormControl>
                                <Input type="date" {...field} />
                              </FormControl>
                              <FormMessage />
                            </FormItem>
                          )}
                        />
                      </div>
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.phishingAwarenessLevel"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Phishing Awareness Level</FormLabel>
                            <Select 
                              onValueChange={field.onChange}
                              defaultValue={field.value}
                            >
                              <FormControl>
                                <SelectTrigger>
                                  <SelectValue placeholder="Select phishing awareness level" />
                                </SelectTrigger>
                              </FormControl>
                              <SelectContent>
                                <SelectItem value="basic">Basic Awareness</SelectItem>
                                <SelectItem value="intermediate">Intermediate Understanding</SelectItem>
                                <SelectItem value="advanced">Advanced Knowledge</SelectItem>
                                <SelectItem value="expert">Expert Level</SelectItem>
                                <SelectItem value="unknown">Unknown/Not Measured</SelectItem>
                              </SelectContent>
                            </Select>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.securityIncidentHistory"
                        render={({ field }) => (
                          <FormItem className="flex flex-row items-start space-x-3 space-y-0 border p-4 rounded-md">
                            <FormControl>
                              <Checkbox
                                checked={field.value}
                                onCheckedChange={field.onChange}
                              />
                            </FormControl>
                            <div className="space-y-1 leading-none">
                              <FormLabel>Security Incident History</FormLabel>
                              <FormDescription>
                                Have you experienced identity-related security incidents in the past 12 months?
                              </FormDescription>
                            </div>
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.incidentDetails"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Incident Details</FormLabel>
                            <FormControl>
                              <Textarea 
                                placeholder="If you had incidents, please provide brief details about the nature and impact" 
                                className="h-24"
                                {...field} 
                              />
                            </FormControl>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                    </div>
                  </div>
                  
                  {/* 5. Privileged Access Management Section */}
                  <div className="border rounded-md p-4 mb-6">
                    <h4 className="font-medium mb-4">5. Privileged Access Management</h4>
                    <div className="space-y-6">
                      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                        <FormField
                          control={form.control}
                          name="identityBehaviorHygiene.privilegedAccountInventory"
                          render={({ field }) => (
                            <FormItem className="flex flex-row items-start space-x-3 space-y-0 border p-4 rounded-md">
                              <FormControl>
                                <Checkbox
                                  checked={field.value}
                                  onCheckedChange={field.onChange}
                                />
                              </FormControl>
                              <div className="space-y-1 leading-none">
                                <FormLabel>Privileged Account Inventory</FormLabel>
                                <FormDescription>
                                  Do you maintain an inventory of privileged accounts?
                                </FormDescription>
                              </div>
                            </FormItem>
                          )}
                        />
                        
                        <FormField
                          control={form.control}
                          name="identityBehaviorHygiene.justInTimeAccess"
                          render={({ field }) => (
                            <FormItem className="flex flex-row items-start space-x-3 space-y-0 border p-4 rounded-md">
                              <FormControl>
                                <Checkbox
                                  checked={field.value}
                                  onCheckedChange={field.onChange}
                                />
                              </FormControl>
                              <div className="space-y-1 leading-none">
                                <FormLabel>Just-In-Time Access</FormLabel>
                                <FormDescription>
                                  Do you implement just-in-time access for privileged accounts?
                                </FormDescription>
                              </div>
                            </FormItem>
                          )}
                        />
                        
                        <FormField
                          control={form.control}
                          name="identityBehaviorHygiene.privilegeEscalationControls"
                          render={({ field }) => (
                            <FormItem className="flex flex-row items-start space-x-3 space-y-0 border p-4 rounded-md">
                              <FormControl>
                                <Checkbox
                                  checked={field.value}
                                  onCheckedChange={field.onChange}
                                />
                              </FormControl>
                              <div className="space-y-1 leading-none">
                                <FormLabel>Privilege Escalation Controls</FormLabel>
                                <FormDescription>
                                  Do you have controls to prevent unauthorized privilege escalation?
                                </FormDescription>
                              </div>
                            </FormItem>
                          )}
                        />
                      </div>
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.adminAccountReview"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Admin Account Review Frequency</FormLabel>
                            <Select 
                              onValueChange={field.onChange}
                              defaultValue={field.value}
                            >
                              <FormControl>
                                <SelectTrigger>
                                  <SelectValue placeholder="Select review frequency" />
                                </SelectTrigger>
                              </FormControl>
                              <SelectContent>
                                <SelectItem value="weekly">Weekly</SelectItem>
                                <SelectItem value="monthly">Monthly</SelectItem>
                                <SelectItem value="quarterly">Quarterly</SelectItem>
                                <SelectItem value="semi-annually">Semi-Annually</SelectItem>
                                <SelectItem value="annually">Annually</SelectItem>
                                <SelectItem value="never">Never/Ad-hoc</SelectItem>
                              </SelectContent>
                            </Select>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.separationOfDuties"
                        render={({ field }) => (
                          <FormItem className="flex flex-row items-start space-x-3 space-y-0 border p-4 rounded-md">
                            <FormControl>
                              <Checkbox
                                checked={field.value}
                                onCheckedChange={field.onChange}
                              />
                            </FormControl>
                            <div className="space-y-1 leading-none">
                              <FormLabel>Separation of Duties</FormLabel>
                              <FormDescription>
                                Do you implement separation of duties for privileged operations?
                              </FormDescription>
                            </div>
                          </FormItem>
                        )}
                      />
                    </div>
                  </div>
                  
                  {/* 6. Lifecycle & Governance Section - MERGED */}
                  <div className="border rounded-md p-4 mb-6">
                    <h4 className="font-medium mb-4">6. Lifecycle & Governance</h4>
                    <div className="space-y-6">
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.onboardingStatus"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Onboarding Process Status</FormLabel>
                            <Select 
                              onValueChange={field.onChange}
                              defaultValue={field.value}
                            >
                              <FormControl>
                                <SelectTrigger>
                                  <SelectValue placeholder="Select onboarding process status" />
                                </SelectTrigger>
                              </FormControl>
                              <SelectContent>
                                <SelectItem value="manual">Manual Process</SelectItem>
                                <SelectItem value="partially-automated">Partially Automated</SelectItem>
                                <SelectItem value="fully-automated">Fully Automated</SelectItem>
                                <SelectItem value="identity-governance">Identity Governance Solution</SelectItem>
                                <SelectItem value="no-process">No Formal Process</SelectItem>
                              </SelectContent>
                            </Select>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.onboardingOffboardingDate"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Onboarding/Offboarding Date</FormLabel>
                            <FormControl>
                              <Input 
                                type="date" 
                                placeholder="mm/dd/yyyy" 
                                {...field} 
                              />
                            </FormControl>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <FormField
                          control={form.control}
                          name="identityBehaviorHygiene.offboardingProcess"
                          render={({ field }) => (
                            <FormItem className="flex flex-row items-start space-x-3 space-y-0 border p-4 rounded-md">
                              <FormControl>
                                <Checkbox
                                  checked={field.value}
                                  onCheckedChange={field.onChange}
                                />
                              </FormControl>
                              <div className="space-y-1 leading-none">
                                <FormLabel>Formal Offboarding Process</FormLabel>
                                <FormDescription>
                                  Do you have a formal offboarding process to revoke access?
                                </FormDescription>
                              </div>
                            </FormItem>
                          )}
                        />
                        
                        <FormField
                          control={form.control}
                          name="identityBehaviorHygiene.accountDormancyMonitoring"
                          render={({ field }) => (
                            <FormItem className="flex flex-row items-start space-x-3 space-y-0 border p-4 rounded-md">
                              <FormControl>
                                <Checkbox
                                  checked={field.value}
                                  onCheckedChange={field.onChange}
                                />
                              </FormControl>
                              <div className="space-y-1 leading-none">
                                <FormLabel>Account Dormancy Monitoring</FormLabel>
                                <FormDescription>
                                  Do you monitor and manage dormant/inactive accounts?
                                </FormDescription>
                              </div>
                            </FormItem>
                          )}
                        />
                      </div>
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.accessReviewFrequency"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Access Review Frequency</FormLabel>
                            <Select 
                              onValueChange={field.onChange}
                              defaultValue={field.value}
                            >
                              <FormControl>
                                <SelectTrigger>
                                  <SelectValue placeholder="Select access review frequency" />
                                </SelectTrigger>
                              </FormControl>
                              <SelectContent>
                                <SelectItem value="monthly">Monthly</SelectItem>
                                <SelectItem value="quarterly">Quarterly</SelectItem>
                                <SelectItem value="semi-annually">Semi-Annually</SelectItem>
                                <SelectItem value="annually">Annually</SelectItem>
                                <SelectItem value="ad-hoc">Ad-hoc/No Regular Schedule</SelectItem>
                                <SelectItem value="never">Never Performed</SelectItem>
                              </SelectContent>
                            </Select>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.roleChanges"
                        render={({ field }) => (
                          <FormItem className="flex flex-row items-start space-x-3 space-y-0 border p-4 rounded-md">
                            <FormControl>
                              <Checkbox
                                checked={field.value}
                                onCheckedChange={field.onChange}
                              />
                            </FormControl>
                            <div className="space-y-1 leading-none">
                              <FormLabel>Role Change Management Process</FormLabel>
                              <FormDescription>
                                Do you have a process to manage access rights when users change roles?
                              </FormDescription>
                            </div>
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.accessReviewSchedule"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Access Review Schedule</FormLabel>
                            <Select 
                              onValueChange={field.onChange}
                              defaultValue={field.value}
                            >
                              <FormControl>
                                <SelectTrigger>
                                  <SelectValue placeholder="Select review schedule" />
                                </SelectTrigger>
                              </FormControl>
                              <SelectContent>
                                <SelectItem value="monthly">Monthly</SelectItem>
                                <SelectItem value="quarterly">Quarterly</SelectItem>
                                <SelectItem value="semi-annual">Semi-Annually</SelectItem>
                                <SelectItem value="annual">Annually</SelectItem>
                                <SelectItem value="biennial">Every 2 Years</SelectItem>
                                <SelectItem value="none">No Regular Review</SelectItem>
                              </SelectContent>
                            </Select>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.certificationStatus"
                        render={({ field }) => (
                          <FormItem className="border p-4 rounded-md h-full flex flex-col justify-center">
                            <div className="flex flex-row items-start space-x-3">
                              <FormControl>
                                <Checkbox
                                  checked={field.value}
                                  onCheckedChange={field.onChange}
                                />
                              </FormControl>
                              <div className="space-y-1 leading-none">
                                <FormLabel>Certification Status</FormLabel>
                                <FormDescription>
                                  Is this identity compliant with NIST/ISO audits?
                                </FormDescription>
                              </div>
                            </div>
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.incidentHistory"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Incident History</FormLabel>
                            <FormDescription>Past violations, e.g., policy breaches</FormDescription>
                            <FormControl>
                              <Textarea 
                                placeholder="Describe any past security incidents" 
                                className="min-h-[80px]"
                                {...field} 
                              />
                            </FormControl>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                    </div>
                  </div>
                  
                  {/* Authentication Practices Section - REMOVED DUPLICATE NUMBER */}
                  <div className="border rounded-md p-4 mb-6">
                    <h4 className="font-medium mb-4">Authentication Practices</h4>
                    <div className="space-y-6">
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.passwordPolicyCompliance"
                        render={({ field }) => (
                          <FormItem className="flex flex-row items-start space-x-3 space-y-0 border p-4 rounded-md">
                            <FormControl>
                              <Checkbox
                                checked={field.value}
                                onCheckedChange={field.onChange}
                              />
                            </FormControl>
                            <div className="space-y-1 leading-none">
                              <FormLabel>Password Policy Compliance</FormLabel>
                              <FormDescription>
                                Do you have a formal password policy that meets industry standards?
                              </FormDescription>
                            </div>
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.passwordPolicyDetails"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Password Policy Details</FormLabel>
                            <FormControl>
                              <Textarea 
                                placeholder="Describe your password policy requirements (length, complexity, rotation, etc.)" 
                                className="h-24"
                                {...field} 
                              />
                            </FormControl>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.mfaStatus"
                        render={({ field }) => (
                          <FormItem className="flex flex-row items-start space-x-3 space-y-0 border p-4 rounded-md">
                            <FormControl>
                              <Checkbox
                                checked={field.value}
                                onCheckedChange={field.onChange}
                              />
                            </FormControl>
                            <div className="space-y-1 leading-none">
                              <FormLabel>Multi-Factor Authentication (MFA)</FormLabel>
                              <FormDescription>
                                Do you implement multi-factor authentication?
                              </FormDescription>
                            </div>
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.mfaTypes"
                        render={() => (
                          <FormItem>
                            <div className="mb-4">
                              <FormLabel>MFA Types</FormLabel>
                              <FormDescription>
                                Select all MFA types that are implemented
                              </FormDescription>
                            </div>
                            <div className="grid grid-cols-2 md:grid-cols-3 gap-3">
                              {[
                                "SMS/Text Messages", 
                                "Email Codes"
                              ].map((type) => (
                                <FormField
                                  key={type}
                                  control={form.control}
                                  name="identityBehaviorHygiene.mfaTypes"
                                  render={({ field }) => {
                                    return (
                                      <FormItem
                                        key={type}
                                        className="flex flex-row items-start space-x-3 space-y-0"
                                      >
                                        <FormControl>
                                          <Checkbox
                                            checked={field.value?.includes(type)}
                                            onCheckedChange={(checked) => {
                                              const updatedValue = checked
                                                ? [...(field.value || []), type]
                                                : field.value?.filter(
                                                    (value) => value !== type
                                                  ) || [];
                                              field.onChange(updatedValue);
                                            }}
                                          />
                                        </FormControl>
                                        <FormLabel className="font-normal cursor-pointer">
                                          {type}
                                        </FormLabel>
                                      </FormItem>
                                    );
                                  }}
                                />
                              ))}
                            </div>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                    </div>
                  </div>
                  
                  {/* Classification - REMOVED DUPLICATE NUMBER Section */}
                  <div className="border rounded-md p-4 mb-6">
                    <h4 className="font-medium mb-4">Classification</h4>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.accessTier"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Access Tier</FormLabel>
                            <Select 
                              onValueChange={field.onChange}
                              defaultValue={field.value}
                            >
                              <FormControl>
                                <SelectTrigger>
                                  <SelectValue placeholder="Select access tier" />
                                </SelectTrigger>
                              </FormControl>
                              <SelectContent>
                                <SelectItem value="tier1">Tier 1 (Basic)</SelectItem>
                                <SelectItem value="tier2">Tier 2 (Standard)</SelectItem>
                                <SelectItem value="tier3">Tier 3 (Elevated)</SelectItem>
                                <SelectItem value="tier4">Tier 4 (Administrative)</SelectItem>
                                <SelectItem value="tier5">Tier 5 (Executive)</SelectItem>
                              </SelectContent>
                            </Select>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.departmentTeam"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Department / Team</FormLabel>
                            <FormControl>
                              <Input placeholder="Enter department or team" {...field} />
                            </FormControl>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.assignedRiskLevel"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Assigned Risk Level</FormLabel>
                            <FormDescription>E.g., "High" for finance admins</FormDescription>
                            <Select 
                              onValueChange={field.onChange}
                              defaultValue={field.value}
                            >
                              <FormControl>
                                <SelectTrigger>
                                  <SelectValue placeholder="Select risk level" />
                                </SelectTrigger>
                              </FormControl>
                              <SelectContent>
                                <SelectItem value="low">Low</SelectItem>
                                <SelectItem value="medium">Medium</SelectItem>
                                <SelectItem value="high">High</SelectItem>
                                <SelectItem value="critical">Critical</SelectItem>
                              </SelectContent>
                            </Select>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.federatedIdentitySource2"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Federated Identity Source</FormLabel>
                            <Select 
                              onValueChange={field.onChange}
                              defaultValue={field.value}
                            >
                              <FormControl>
                                <SelectTrigger>
                                  <SelectValue placeholder="Select identity source" />
                                </SelectTrigger>
                              </FormControl>
                              <SelectContent>
                                <SelectItem value="azure-ad">Azure AD / Entra ID</SelectItem>
                                <SelectItem value="okta">Okta</SelectItem>
                                <SelectItem value="ping">PingIdentity</SelectItem>
                                <SelectItem value="aws">AWS IAM</SelectItem>
                                <SelectItem value="google">Google Workspace</SelectItem>
                                <SelectItem value="on-prem-ad">On-Prem Active Directory</SelectItem>
                                <SelectItem value="none">None - Local Accounts Only</SelectItem>
                              </SelectContent>
                            </Select>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                    </div>
                  </div>
                  
                  {/* 7. Access 3. Access & Permissions Permissions Section */}
                  <div className="border rounded-md p-4 mb-6">
                    <h4 className="font-medium mb-4">7. Access 3. Access & Permissions Permissions</h4>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.assignedRoles"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Assigned Roles</FormLabel>
                            <FormDescription>RBAC groups, e.g., "Finance-ReadOnly"</FormDescription>
                            <FormControl>
                              <Input placeholder="Enter assigned roles" {...field} />
                            </FormControl>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.entitlements"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Entitlements</FormLabel>
                            <FormDescription>Specific permissions like "SQL DB Admin"</FormDescription>
                            <FormControl>
                              <Input placeholder="Enter specific permissions" {...field} />
                            </FormControl>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.accessDuration2"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Access Duration</FormLabel>
                            <Select 
                              onValueChange={field.onChange}
                              defaultValue={field.value}
                            >
                              <FormControl>
                                <SelectTrigger>
                                  <SelectValue placeholder="Select access duration" />
                                </SelectTrigger>
                              </FormControl>
                              <SelectContent>
                                <SelectItem value="temp-1day">Temporary (1 day)</SelectItem>
                                <SelectItem value="temp-1week">Temporary (1 week)</SelectItem>
                                <SelectItem value="temp-1month">Temporary (1 month)</SelectItem>
                                <SelectItem value="temp-3months">Temporary (3 months)</SelectItem>
                                <SelectItem value="temp-6months">Temporary (6 months)</SelectItem>
                                <SelectItem value="permanent">Permanent</SelectItem>
                                <SelectItem value="jit">Just-in-time (as needed)</SelectItem>
                              </SelectContent>
                            </Select>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <div className="flex flex-col gap-4">
                        <FormField
                          control={form.control}
                          name="identityBehaviorHygiene.mfaStatus2"
                          render={({ field }) => (
                            <FormItem>
                              <FormLabel>MFA Status</FormLabel>
                              <Select 
                                onValueChange={field.onChange}
                                defaultValue={field.value}
                              >
                                <FormControl>
                                  <SelectTrigger>
                                    <SelectValue placeholder="MFA Status" />
                                  </SelectTrigger>
                                </FormControl>
                                <SelectContent>
                                  <SelectItem value="enabled">Enabled</SelectItem>
                                  <SelectItem value="disabled">Disabled</SelectItem>
                                  <SelectItem value="exempt">Exempt (Approved Exception)</SelectItem>
                                  <SelectItem value="not-applicable">Not Applicable</SelectItem>
                                </SelectContent>
                              </Select>
                              <FormMessage />
                            </FormItem>
                          )}
                        />
                        
                        <FormField
                          control={form.control}
                          name="identityBehaviorHygiene.mfaMethod"
                          render={({ field }) => (
                            <FormItem>
                              <FormLabel>MFA Method</FormLabel>
                              <Select 
                                onValueChange={field.onChange}
                                defaultValue={field.value}
                              >
                                <FormControl>
                                  <SelectTrigger>
                                    <SelectValue placeholder="MFA Method" />
                                  </SelectTrigger>
                                </FormControl>
                                <SelectContent>
                                  <SelectItem value="app">Authenticator App</SelectItem>
                                  <SelectItem value="sms">SMS/Text</SelectItem>
                                  <SelectItem value="token">Hardware Token</SelectItem>
                                  <SelectItem value="biometric">Biometric</SelectItem>
                                  <SelectItem value="card">Smart Card</SelectItem>
                                  <SelectItem value="push">Push Notification</SelectItem>
                                  <SelectItem value="multiple">Multiple Methods</SelectItem>
                                  <SelectItem value="none">None</SelectItem>
                                </SelectContent>
                              </Select>
                              <FormMessage />
                            </FormItem>
                          )}
                        />
                      </div>
                    </div>
                  </div>
                  
                  {/* 8. Security Posture Section */}
                  <div className="border rounded-md p-4 mb-6">
                    <h4 className="font-medium mb-4">8. Security Posture</h4>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.passwordHygiene"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Password Hygiene</FormLabel>
                            <FormDescription>Last changed, complexity, reuse status</FormDescription>
                            <FormControl>
                              <Textarea 
                                placeholder="Describe password hygiene" 
                                className="min-h-[80px]"
                                {...field} 
                              />
                            </FormControl>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.breachedCredentialChecks"
                        render={({ field }) => (
                          <FormItem className="border p-4 rounded-md h-full flex flex-col justify-center">
                            <div className="flex flex-row items-start space-x-3">
                              <FormControl>
                                <Checkbox
                                  checked={field.value}
                                  onCheckedChange={field.onChange}
                                />
                              </FormControl>
                              <div className="space-y-1 leading-none">
                                <FormLabel>Breached Credential Checks</FormLabel>
                                <FormDescription>
                                  Do you check for breached credentials via services like HaveIBeenPwned?
                                </FormDescription>
                              </div>
                            </div>
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.sessionTimeoutSettings"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Session Timeout Settings</FormLabel>
                            <Select 
                              onValueChange={field.onChange}
                              defaultValue={field.value}
                            >
                              <FormControl>
                                <SelectTrigger>
                                  <SelectValue placeholder="Select session timeout" />
                                </SelectTrigger>
                              </FormControl>
                              <SelectContent>
                                <SelectItem value="15min">15 minutes</SelectItem>
                                <SelectItem value="30min">30 minutes</SelectItem>
                                <SelectItem value="1hour">1 hour</SelectItem>
                                <SelectItem value="4hours">4 hours</SelectItem>
                                <SelectItem value="8hours">8 hours</SelectItem>
                                <SelectItem value="24hours">24 hours</SelectItem>
                                <SelectItem value="never">Never (No timeout)</SelectItem>
                              </SelectContent>
                            </Select>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.unusedAccountDetection"
                        render={({ field }) => (
                          <FormItem className="border p-4 rounded-md h-full flex flex-col justify-center">
                            <div className="flex flex-row items-start space-x-3">
                              <FormControl>
                                <Checkbox
                                  checked={field.value}
                                  onCheckedChange={field.onChange}
                                />
                              </FormControl>
                              <div className="space-y-1 leading-none">
                                <FormLabel>Unused Account Detection</FormLabel>
                                <FormDescription>
                                  Do you detect and manage accounts inactive for 90+ days?
                                </FormDescription>
                              </div>
                            </div>
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.privilegeEscalationAlerts"
                        render={({ field }) => (
                          <FormItem className="border p-4 rounded-md h-full flex flex-col justify-center">
                            <div className="flex flex-row items-start space-x-3">
                              <FormControl>
                                <Checkbox
                                  checked={field.value}
                                  onCheckedChange={field.onChange}
                                />
                              </FormControl>
                              <div className="space-y-1 leading-none">
                                <FormLabel>Privilege Escalation Alerts</FormLabel>
                                <FormDescription>
                                  Do you monitor and alert on sudo/root usage logs?
                                </FormDescription>
                              </div>
                            </div>
                          </FormItem>
                        )}
                      />
                    </div>
                  </div>
                  
                  {/* 9. Behavior Monitoring Section */}
                  <div className="border rounded-md p-4 mb-6">
                    <h4 className="font-medium mb-4">9. Behavior Monitoring</h4>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.typicalLoginPatterns"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Typical Login Patterns</FormLabel>
                            <FormDescription>Time, location, device</FormDescription>
                            <FormControl>
                              <Textarea 
                                placeholder="Describe typical login patterns" 
                                className="min-h-[80px]"
                                {...field} 
                              />
                            </FormControl>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.anomalyDetectionFlags"
                        render={({ field }) => (
                          <FormItem className="flex flex-row items-start space-x-3 space-y-0 border p-4 rounded-md">
                            <FormControl>
                              <Checkbox
                                checked={field.value}
                                onCheckedChange={field.onChange}
                              />
                            </FormControl>
                            <div className="space-y-1 leading-none">
                              <FormLabel>Anomaly Detection Flags</FormLabel>
                              <FormDescription>
                                Do you detect impossible travel, brute force attempts, etc.?
                              </FormDescription>
                            </div>
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.dataAccessTrends"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Data Access Trends</FormLabel>
                            <FormDescription>Unusual file downloads, cloud API calls</FormDescription>
                            <FormControl>
                              <Textarea 
                                placeholder="Describe data access monitoring" 
                                className="min-h-[80px]"
                                {...field} 
                              />
                            </FormControl>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="identityBehaviorHygiene.toolCommandUsage"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Tool/Command Usage</FormLabel>
                            <FormDescription>E.g., PowerShell, RDP, SSH frequency</FormDescription>
                            <FormControl>
                              <Textarea 
                                placeholder="Describe tool/command usage monitoring" 
                                className="min-h-[80px]"
                                {...field} 
                              />
                            </FormControl>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                    </div>
                  </div>
