              <TabsContent value="device-inventory" className="space-y-6">
                <div className="border rounded-md p-4">
                  <h3 className="font-medium mb-4">12. Device Inventory Tracking</h3>
                  <p className="text-sm text-muted-foreground mb-4">
                    Track and manage your organization's devices to improve security visibility and control.
                  </p>
                  
                  {/* Device List Management */}
                  <div className="space-y-4 mb-6">
                    <div className="flex justify-between items-center">
                      <h4 className="font-medium">Device Inventory</h4>
                      <Button 
                        type="button" 
                        size="sm"
                        className="flex items-center gap-1"
                        onClick={() => {
                          // Add a new empty device to the inventory
                          const currentDevices = form.getValues("deviceInventory") || [];
                          form.setValue("deviceInventory", [
                            ...currentDevices,
                            {
                              id: Date.now().toString(),
                              deviceType: "",
                              makeModel: "",
                              serialNumber: "",
                              sensitivityLevel: "low",
                              networkZone: "",
                              lastKnownLocation: "",
                              owner: "",
                              patchStatus: "up-to-date",
                              lastLoginDate: new Date().toISOString(),
                              // Add other default values as needed
                            }
                          ]);
                        }}
                      >
                        Add Device
                      </Button>
                    </div>
                    
                    <div className="border rounded-md p-4">
                      <div className="flex justify-between items-center mb-4">
                        <h5 className="font-medium">Device Types</h5>
                        
                        <Select
                          value="all"
                          onValueChange={() => {
                            // Filter devices by type
                          }}
                        >
                          <SelectTrigger className="w-[180px]">
                            <SelectValue placeholder="Filter by type" />
                          </SelectTrigger>
                          <SelectContent>
                            <SelectItem value="all">All Types</SelectItem>
                            <SelectItem value="server">Servers</SelectItem>
                            <SelectItem value="workstation">Workstations</SelectItem>
                            <SelectItem value="laptop">Laptops</SelectItem>
                            <SelectItem value="mobile">Mobile Devices</SelectItem>
                            <SelectItem value="network">Network Equipment</SelectItem>
                            <SelectItem value="iot">IoT Devices</SelectItem>
                            <SelectItem value="medical">Medical Devices</SelectItem>
                            <SelectItem value="other">Other</SelectItem>
                          </SelectContent>
                        </Select>
                      </div>
                      
                      <div className="overflow-x-auto">
                        <table className="w-full border-collapse">
                          <thead>
                            <tr className="border-b-2">
                              <th className="p-2 text-left">Device Type</th>
                              <th className="p-2 text-left">Make/Model</th>
                              <th className="p-2 text-left">Serial/Asset #</th>
                              <th className="p-2 text-left">Risk Level</th>
                              <th className="p-2 text-left">Owner</th>
                              <th className="p-2 text-left">Actions</th>
                            </tr>
                          </thead>
                          <tbody>
                            {(form.watch("deviceInventory") || []).length === 0 ? (
                              <tr>
                                <td colSpan={6} className="p-4 text-center text-muted-foreground">
                                  No devices added yet. Click "Add Device" to begin tracking devices.
                                </td>
                              </tr>
                            ) : (
                              form.watch("deviceInventory")?.map((device: any, index: number) => (
                                <tr key={device.id} className="border-b">
                                  <td className="p-2">{device.deviceType || "—"}</td>
                                  <td className="p-2">{device.makeModel || "—"}</td>
                                  <td className="p-2">{device.serialNumber || "—"}</td>
                                  <td className="p-2">
                                    <Badge 
                                      variant={
                                        device.sensitivityLevel === "high" ? "destructive" : 
                                        device.sensitivityLevel === "medium" ? "default" : 
                                        "outline"
                                      }
                                    >
                                      {device.sensitivityLevel || "Low"}
                                    </Badge>
                                  </td>
                                  <td className="p-2">{device.owner || "—"}</td>
                                  <td className="p-2">
                                    <div className="flex space-x-2">
                                      <Button 
                                        type="button"
                                        variant="outline"
                                        size="sm"
                                        onClick={() => {
                                          // Set the currently edited device
                                          form.setValue("currentEditedDeviceIndex", index);
                                        }}
                                      >
                                        Edit
                                      </Button>
                                      <Button 
                                        type="button"
                                        variant="destructive"
                                        size="sm"
                                        onClick={() => {
                                          // Remove this device
                                          const currentDevices = form.getValues("deviceInventory") || [];
                                          form.setValue(
                                            "deviceInventory", 
                                            currentDevices.filter((_: any, i: number) => i !== index)
                                          );
                                        }}
                                      >
                                        Remove
                                      </Button>
                                    </div>
                                  </td>
                                </tr>
                              ))
                            )}
                          </tbody>
                        </table>
                      </div>
                    </div>
                    
                    {/* File Import Options */}
                    <div className="mt-6 p-4 border rounded-md">
                      <h5 className="font-medium mb-2">Import Device Inventory</h5>
                      <p className="text-sm text-muted-foreground mb-4">
                        Use these options to import existing device inventory data.
                      </p>
                      
                      <div className="flex flex-col sm:flex-row gap-4">
                        <Button type="button" variant="outline" className="flex-1">
                          Import CSV
                        </Button>
                        <Button type="button" variant="outline" className="flex-1">
                          Download Template
                        </Button>
                      </div>
                    </div>
                  </div>
                  
                  {/* Device Edit Form - Only shown when editing a specific device */}
                  {form.watch("currentEditedDeviceIndex") !== undefined && (
                    <div className="border rounded-md p-4 mt-6">
                      <div className="flex justify-between items-center mb-4">
                        <h4 className="font-medium">Edit Device Details</h4>
                        <Button 
                          type="button"
                          variant="ghost"
                          size="sm"
                          onClick={() => {
                            // Close the edit form
                            form.setValue("currentEditedDeviceIndex", undefined);
                          }}
                        >
                          Close
                        </Button>
                      </div>
                      
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-4">
                      <FormField
                        control={form.control}
                        name="deviceInventoryTracking.deviceId"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Device ID / Asset Tag</FormLabel>
                            <FormControl>
                              <Input placeholder="Enter device ID or asset tag" {...field} />
                            </FormControl>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="deviceInventoryTracking.makeModel"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Make / Model</FormLabel>
                            <FormControl>
                              <Input placeholder="Enter device make and model" {...field} />
                            </FormControl>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="deviceInventoryTracking.colorDescription"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Color / Physical Description</FormLabel>
                            <FormControl>
                              <Input placeholder="Enter device color or description" {...field} />
                            </FormControl>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="deviceInventoryTracking.serialNumber"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Serial Number</FormLabel>
                            <FormControl>
                              <Input placeholder="Enter device serial number" {...field} />
                            </FormControl>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="deviceInventoryTracking.owner"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Owner / Assigned User</FormLabel>
                            <FormControl>
                              <Input placeholder="Enter device owner or assigned user" {...field} />
                            </FormControl>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="deviceInventoryTracking.deviceNickname"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Device Nickname or Label (if used)</FormLabel>
                            <FormControl>
                              <Input placeholder="Enter device nickname or label" {...field} />
                            </FormControl>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                    </div>
                  </div>
                  
                  {/* 2. Classification Section */}
                  <div className="border rounded-md p-4 mb-6">
                    <h4 className="font-medium mb-4">2. Classification</h4>
                    <div className="space-y-6">
                      <FormField
                        control={form.control}
                        name="deviceInventoryTracking.deviceType"
                        render={() => (
                          <FormItem>
                            <div className="mb-4">
                              <FormLabel>Device Type</FormLabel>
                              <FormDescription>
                                Select the type of device
                              </FormDescription>
                            </div>
                            <div className="grid grid-cols-1 md:grid-cols-3 gap-3">
                              {["Workstation", "Laptop", "Mobile Phone", "Tablet", "Server", "Network Device", "IoT Device", "Medical Device", "Other"].map((type) => (
                                <FormField
                                  key={type}
                                  control={form.control}
                                  name="deviceInventoryTracking.deviceType"
                                  render={({ field }) => {
                                    return (
                                      <FormItem
                                        key={type}
                                        className="flex flex-row items-start space-x-3 space-y-0 p-4 border rounded-md"
                                      >
                                        <FormControl>
                                          <Checkbox
                                            checked={field.value?.includes(type)}
                                            onCheckedChange={(checked) => {
                                              return checked
                                                ? field.onChange([...field.value || [], type])
                                                : field.onChange(
                                                    field.value?.filter(
                                                      (value) => value !== type
                                                    )
                                                  );
                                            }}
                                          />
                                        </FormControl>
                                        <FormLabel className="font-normal">
                                          {type}
                                        </FormLabel>
                                      </FormItem>
                                    );
                                  }}
                                />
                              ))}
                            </div>
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="deviceInventoryTracking.sensitivityLevel"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Data Sensitivity Level</FormLabel>
                            <Select 
                              onValueChange={field.onChange}
                              defaultValue={field.value}
                            >
                              <FormControl>
                                <SelectTrigger>
                                  <SelectValue placeholder="Select data sensitivity level" />
                                </SelectTrigger>
                              </FormControl>
                              <SelectContent>
                                <SelectItem value="public">Public</SelectItem>
                                <SelectItem value="internal">Internal</SelectItem>
                                <SelectItem value="confidential">Confidential</SelectItem>
                                <SelectItem value="restricted">Restricted</SelectItem>
                                <SelectItem value="classified">Classified</SelectItem>
                              </SelectContent>
                            </Select>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                    </div>
                  </div>
                  
                  {/* 3. Network & Location Section */}
                  <div className="border rounded-md p-4 mb-6">
                    <h4 className="font-medium mb-4">3. Network & Location</h4>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      <FormField
                        control={form.control}
                        name="deviceInventoryTracking.ipAddress"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>IP Address</FormLabel>
                            <FormControl>
                              <Input placeholder="Enter IP address" {...field} />
                            </FormControl>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="deviceInventoryTracking.macAddress"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>MAC Address</FormLabel>
                            <FormControl>
                              <Input placeholder="Enter MAC address" {...field} />
                            </FormControl>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
                        name="deviceInventoryTracking.networkLocation"
                        render={({ field }) => (
                          <FormItem>
                            <FormLabel>Network Location</FormLabel>
                            <Select 
                              onValueChange={field.onChange}
                              defaultValue={field.value}
                            >
                              <FormControl>
                                <SelectTrigger>
                                  <SelectValue placeholder="Select network location" />
                                </SelectTrigger>
                              </FormControl>
                              <SelectContent>
                                <SelectItem value="internal">Internal Network</SelectItem>
                                <SelectItem value="dmz">DMZ</SelectItem>
                                <SelectItem value="cloud">Cloud-Hosted</SelectItem>
                                <SelectItem value="remote">Remote/External</SelectItem>
                              </SelectContent>
                            </Select>
                            <FormMessage />
                          </FormItem>
                        )}
                      />
                      
                      <FormField
                        control={form.control}
